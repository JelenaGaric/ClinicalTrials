// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Context;

namespace Model.Migrations
{
    [DbContext(typeof(ClinicalTrialsContext))]
    [Migration("20201014085314_Migration1")]
    partial class Migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.ArmsInterventionsModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InterventionListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterventionListId");

                    b.ToTable("ArmsInterventionsModule");
                });

            modelBuilder.Entity("Model.ConditionAncestor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionAncestorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConditionAncestorListId")
                        .HasColumnType("int");

                    b.Property<string>("ConditionAncestorTerm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConditionAncestorListId");

                    b.ToTable("ConditionAncestor");
                });

            modelBuilder.Entity("Model.ConditionAncestorList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ConditionAncestorList");
                });

            modelBuilder.Entity("Model.ConditionBrowseBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionBrowseBranchAbbrev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConditionBrowseBranchListId")
                        .HasColumnType("int");

                    b.Property<string>("ConditionBrowseBranchName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConditionBrowseBranchListId");

                    b.ToTable("ConditionBrowseBranch");
                });

            modelBuilder.Entity("Model.ConditionBrowseBranchList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ConditionBrowseBranchList");
                });

            modelBuilder.Entity("Model.ConditionBrowseLeaf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionBrowseLeafAsFound")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionBrowseLeafId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConditionBrowseLeafListId")
                        .HasColumnType("int");

                    b.Property<string>("ConditionBrowseLeafName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionBrowseLeafRelevance")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConditionBrowseLeafListId");

                    b.ToTable("ConditionBrowseLeaf");
                });

            modelBuilder.Entity("Model.ConditionBrowseLeafList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ConditionBrowseLeafList");
                });

            modelBuilder.Entity("Model.ConditionBrowseModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConditionAncestorListId")
                        .HasColumnType("int");

                    b.Property<int?>("ConditionBrowseBranchListId")
                        .HasColumnType("int");

                    b.Property<int?>("ConditionBrowseLeafListId")
                        .HasColumnType("int");

                    b.Property<int?>("ConditionMeshListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConditionAncestorListId");

                    b.HasIndex("ConditionBrowseBranchListId");

                    b.HasIndex("ConditionBrowseLeafListId");

                    b.HasIndex("ConditionMeshListId");

                    b.ToTable("ConditionBrowseModule");
                });

            modelBuilder.Entity("Model.ConditionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionList");
                });

            modelBuilder.Entity("Model.ConditionMesh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionMeshId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConditionMeshListId")
                        .HasColumnType("int");

                    b.Property<string>("ConditionMeshTerm")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.HasIndex("ConditionMeshListId");

                    b.ToTable("ConditionMesh");
                });

            modelBuilder.Entity("Model.ConditionMeshList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ConditionMeshList");
                });

            modelBuilder.Entity("Model.ConditionsModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConditionListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConditionListId");

                    b.ToTable("ConditionsModule");
                });

            modelBuilder.Entity("Model.ContactsLocationsModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LocationListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationListId");

                    b.ToTable("ContactsLocationsModule");
                });

            modelBuilder.Entity("Model.DerivedSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConditionBrowseModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("InterventionBrowseModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("MiscInfoModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConditionBrowseModuleId");

                    b.HasIndex("InterventionBrowseModuleId");

                    b.HasIndex("MiscInfoModuleId");

                    b.ToTable("DerivedSection");
                });

            modelBuilder.Entity("Model.DescriptionModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BriefSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DescriptionModule");
                });

            modelBuilder.Entity("Model.DesignInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DesignInterventionModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DesignMaskingInfoId")
                        .HasColumnType("int");

                    b.Property<string>("DesignPrimaryPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DesignMaskingInfoId");

                    b.ToTable("DesignInfo");
                });

            modelBuilder.Entity("Model.DesignMaskingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DesignMasking")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DesignMaskingInfo");
                });

            modelBuilder.Entity("Model.DesignModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DesignInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("PhaseListId")
                        .HasColumnType("int");

                    b.Property<string>("StudyType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DesignInfoId");

                    b.HasIndex("PhaseListId");

                    b.ToTable("DesignModule");
                });

            modelBuilder.Entity("Model.EligibilityModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EligibilityCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthyVolunteers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumAge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinimumAge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StdAgeListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StdAgeListId");

                    b.ToTable("EligibilityModule");
                });

            modelBuilder.Entity("Model.ExpandedAccessInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HasExpandedAccess")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExpandedAccessInfo");
                });

            modelBuilder.Entity("Model.FullStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int?>("StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("FullStudy");
                });

            modelBuilder.Entity("Model.IdentificationModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BriefTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NCTId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrgStudyIdInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryIdInfoListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrgStudyIdInfoId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SecondaryIdInfoListId");

                    b.ToTable("IdentificationModule");
                });

            modelBuilder.Entity("Model.Intervention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InterventionListId")
                        .HasColumnType("int");

                    b.Property<string>("InterventionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterventionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InterventionListId");

                    b.ToTable("Intervention");
                });

            modelBuilder.Entity("Model.InterventionAncestor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InterventionAncestorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InterventionAncestorListId")
                        .HasColumnType("int");

                    b.Property<string>("InterventionAncestorTerm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InterventionAncestorListId");

                    b.ToTable("InterventionAncestor");
                });

            modelBuilder.Entity("Model.InterventionAncestorList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("InterventionAncestorList");
                });

            modelBuilder.Entity("Model.InterventionBrowseBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InterventionBrowseBranchAbbrev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InterventionBrowseBranchListId")
                        .HasColumnType("int");

                    b.Property<string>("InterventionBrowseBranchName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InterventionBrowseBranchListId");

                    b.ToTable("InterventionBrowseBranch");
                });

            modelBuilder.Entity("Model.InterventionBrowseBranchList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("InterventionBrowseBranchList");
                });

            modelBuilder.Entity("Model.InterventionBrowseLeaf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InterventionBrowseLeafAsFound")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterventionBrowseLeafId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InterventionBrowseLeafListId")
                        .HasColumnType("int");

                    b.Property<string>("InterventionBrowseLeafName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterventionBrowseLeafRelevance")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InterventionBrowseLeafListId");

                    b.ToTable("InterventionBrowseLeaf");
                });

            modelBuilder.Entity("Model.InterventionBrowseLeafList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("InterventionBrowseLeafList");
                });

            modelBuilder.Entity("Model.InterventionBrowseModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InterventionAncestorListId")
                        .HasColumnType("int");

                    b.Property<int?>("InterventionBrowseBranchListId")
                        .HasColumnType("int");

                    b.Property<int?>("InterventionBrowseLeafListId")
                        .HasColumnType("int");

                    b.Property<int?>("InterventionMeshListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterventionAncestorListId");

                    b.HasIndex("InterventionBrowseBranchListId");

                    b.HasIndex("InterventionBrowseLeafListId");

                    b.HasIndex("InterventionMeshListId");

                    b.ToTable("InterventionBrowseModule");
                });

            modelBuilder.Entity("Model.InterventionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("InterventionList");
                });

            modelBuilder.Entity("Model.InterventionMesh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InterventionMeshId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InterventionMeshListId")
                        .HasColumnType("int");

                    b.Property<string>("InterventionMeshTerm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InterventionMeshListId");

                    b.ToTable("InterventionMesh");
                });

            modelBuilder.Entity("Model.InterventionMeshList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("InterventionMeshList");
                });

            modelBuilder.Entity("Model.LastUpdatePostDateStruct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastUpdatePostDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatePostDateType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LastUpdatePostDateStruct");
                });

            modelBuilder.Entity("Model.LeadSponsor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LeadSponsorClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeadSponsorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeadSponsor");
                });

            modelBuilder.Entity("Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationFacility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationListId")
                        .HasColumnType("int");

                    b.Property<string>("LocationState")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationListId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Model.LocationList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("LocationList");
                });

            modelBuilder.Entity("Model.MiscInfoModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VersionHolder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MiscInfoModule");
                });

            modelBuilder.Entity("Model.OrgStudyIdInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrgStudyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrgStudyIdInfo");
                });

            modelBuilder.Entity("Model.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrgClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Model.PhaseList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Phase")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhaseList");
                });

            modelBuilder.Entity("Model.ProtocolSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArmsInterventionsModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("ConditionsModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactsLocationsModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("DescriptionModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("DesignModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("EligibilityModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("IdentificationModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("SponsorCollaboratorsModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArmsInterventionsModuleId");

                    b.HasIndex("ConditionsModuleId");

                    b.HasIndex("ContactsLocationsModuleId");

                    b.HasIndex("DescriptionModuleId");

                    b.HasIndex("DesignModuleId");

                    b.HasIndex("EligibilityModuleId");

                    b.HasIndex("IdentificationModuleId");

                    b.HasIndex("SponsorCollaboratorsModuleId");

                    b.HasIndex("StatusModuleId");

                    b.ToTable("ProtocolSection");
                });

            modelBuilder.Entity("Model.Root", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FullStudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FullStudyId");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("Model.SecondaryIdInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SecondaryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecondaryIdInfoListId")
                        .HasColumnType("int");

                    b.Property<string>("SecondaryIdLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryIdType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SecondaryIdInfoListId");

                    b.ToTable("SecondaryIdInfo");
                });

            modelBuilder.Entity("Model.SecondaryIdInfoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("SecondaryIdInfoList");
                });

            modelBuilder.Entity("Model.SponsorCollaboratorsModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LeadSponsorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeadSponsorId");

                    b.ToTable("SponsorCollaboratorsModule");
                });

            modelBuilder.Entity("Model.StatusModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExpandedAccessInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("LastUpdatePostDateStructId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateSubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OverallStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusVerifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudyFirstPostDateStructId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StudyFirstSubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudyFirstSubmitQCDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExpandedAccessInfoId");

                    b.HasIndex("LastUpdatePostDateStructId");

                    b.HasIndex("StudyFirstPostDateStructId");

                    b.ToTable("StatusModule");
                });

            modelBuilder.Entity("Model.StdAgeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StdAge")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StdAgeList");
                });

            modelBuilder.Entity("Model.Study", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DerivedSectionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProtocolSectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DerivedSectionId");

                    b.HasIndex("ProtocolSectionId");

                    b.ToTable("Study");
                });

            modelBuilder.Entity("Model.StudyFirstPostDateStruct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudyFirstPostDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyFirstPostDateType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudyFirstPostDateStruct");
                });

            modelBuilder.Entity("Model.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Model.TagList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NCTId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TagLists");
                });

            modelBuilder.Entity("Model.ArmsInterventionsModule", b =>
                {
                    b.HasOne("Model.InterventionList", "InterventionList")
                        .WithMany()
                        .HasForeignKey("InterventionListId");
                });

            modelBuilder.Entity("Model.ConditionAncestor", b =>
                {
                    b.HasOne("Model.ConditionAncestorList", null)
                        .WithMany("ConditionAncestor")
                        .HasForeignKey("ConditionAncestorListId");
                });

            modelBuilder.Entity("Model.ConditionBrowseBranch", b =>
                {
                    b.HasOne("Model.ConditionBrowseBranchList", null)
                        .WithMany("ConditionBrowseBranch")
                        .HasForeignKey("ConditionBrowseBranchListId");
                });

            modelBuilder.Entity("Model.ConditionBrowseLeaf", b =>
                {
                    b.HasOne("Model.ConditionBrowseLeafList", null)
                        .WithMany("ConditionBrowseLeaf")
                        .HasForeignKey("ConditionBrowseLeafListId");
                });

            modelBuilder.Entity("Model.ConditionBrowseModule", b =>
                {
                    b.HasOne("Model.ConditionAncestorList", "ConditionAncestorList")
                        .WithMany()
                        .HasForeignKey("ConditionAncestorListId");

                    b.HasOne("Model.ConditionBrowseBranchList", "ConditionBrowseBranchList")
                        .WithMany()
                        .HasForeignKey("ConditionBrowseBranchListId");

                    b.HasOne("Model.ConditionBrowseLeafList", "ConditionBrowseLeafList")
                        .WithMany()
                        .HasForeignKey("ConditionBrowseLeafListId");

                    b.HasOne("Model.ConditionMeshList", "ConditionMeshList")
                        .WithMany()
                        .HasForeignKey("ConditionMeshListId");
                });

            modelBuilder.Entity("Model.ConditionMesh", b =>
                {
                    b.HasOne("Model.ConditionMeshList", null)
                        .WithMany("ConditionMesh")
                        .HasForeignKey("ConditionMeshListId");
                });

            modelBuilder.Entity("Model.ConditionsModule", b =>
                {
                    b.HasOne("Model.ConditionList", "ConditionList")
                        .WithMany()
                        .HasForeignKey("ConditionListId");
                });

            modelBuilder.Entity("Model.ContactsLocationsModule", b =>
                {
                    b.HasOne("Model.LocationList", "LocationList")
                        .WithMany()
                        .HasForeignKey("LocationListId");
                });

            modelBuilder.Entity("Model.DerivedSection", b =>
                {
                    b.HasOne("Model.ConditionBrowseModule", "ConditionBrowseModule")
                        .WithMany()
                        .HasForeignKey("ConditionBrowseModuleId");

                    b.HasOne("Model.InterventionBrowseModule", "InterventionBrowseModule")
                        .WithMany()
                        .HasForeignKey("InterventionBrowseModuleId");

                    b.HasOne("Model.MiscInfoModule", "MiscInfoModule")
                        .WithMany()
                        .HasForeignKey("MiscInfoModuleId");
                });

            modelBuilder.Entity("Model.DesignInfo", b =>
                {
                    b.HasOne("Model.DesignMaskingInfo", "DesignMaskingInfo")
                        .WithMany()
                        .HasForeignKey("DesignMaskingInfoId");
                });

            modelBuilder.Entity("Model.DesignModule", b =>
                {
                    b.HasOne("Model.DesignInfo", "DesignInfo")
                        .WithMany()
                        .HasForeignKey("DesignInfoId");

                    b.HasOne("Model.PhaseList", "PhaseList")
                        .WithMany()
                        .HasForeignKey("PhaseListId");
                });

            modelBuilder.Entity("Model.EligibilityModule", b =>
                {
                    b.HasOne("Model.StdAgeList", "StdAgeList")
                        .WithMany()
                        .HasForeignKey("StdAgeListId");
                });

            modelBuilder.Entity("Model.FullStudy", b =>
                {
                    b.HasOne("Model.Study", "Study")
                        .WithMany()
                        .HasForeignKey("StudyId");
                });

            modelBuilder.Entity("Model.IdentificationModule", b =>
                {
                    b.HasOne("Model.OrgStudyIdInfo", "OrgStudyIdInfo")
                        .WithMany()
                        .HasForeignKey("OrgStudyIdInfoId");

                    b.HasOne("Model.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Model.SecondaryIdInfoList", "SecondaryIdInfoList")
                        .WithMany()
                        .HasForeignKey("SecondaryIdInfoListId");
                });

            modelBuilder.Entity("Model.Intervention", b =>
                {
                    b.HasOne("Model.InterventionList", null)
                        .WithMany("Intervention")
                        .HasForeignKey("InterventionListId");
                });

            modelBuilder.Entity("Model.InterventionAncestor", b =>
                {
                    b.HasOne("Model.InterventionAncestorList", null)
                        .WithMany("InterventionAncestor")
                        .HasForeignKey("InterventionAncestorListId");
                });

            modelBuilder.Entity("Model.InterventionBrowseBranch", b =>
                {
                    b.HasOne("Model.InterventionBrowseBranchList", null)
                        .WithMany("InterventionBrowseBranch")
                        .HasForeignKey("InterventionBrowseBranchListId");
                });

            modelBuilder.Entity("Model.InterventionBrowseLeaf", b =>
                {
                    b.HasOne("Model.InterventionBrowseLeafList", null)
                        .WithMany("InterventionBrowseLeaf")
                        .HasForeignKey("InterventionBrowseLeafListId");
                });

            modelBuilder.Entity("Model.InterventionBrowseModule", b =>
                {
                    b.HasOne("Model.InterventionAncestorList", "InterventionAncestorList")
                        .WithMany()
                        .HasForeignKey("InterventionAncestorListId");

                    b.HasOne("Model.InterventionBrowseBranchList", "InterventionBrowseBranchList")
                        .WithMany()
                        .HasForeignKey("InterventionBrowseBranchListId");

                    b.HasOne("Model.InterventionBrowseLeafList", "InterventionBrowseLeafList")
                        .WithMany()
                        .HasForeignKey("InterventionBrowseLeafListId");

                    b.HasOne("Model.InterventionMeshList", "InterventionMeshList")
                        .WithMany()
                        .HasForeignKey("InterventionMeshListId");
                });

            modelBuilder.Entity("Model.InterventionMesh", b =>
                {
                    b.HasOne("Model.InterventionMeshList", null)
                        .WithMany("InterventionMesh")
                        .HasForeignKey("InterventionMeshListId");
                });

            modelBuilder.Entity("Model.Location", b =>
                {
                    b.HasOne("Model.LocationList", null)
                        .WithMany("Location")
                        .HasForeignKey("LocationListId");
                });

            modelBuilder.Entity("Model.ProtocolSection", b =>
                {
                    b.HasOne("Model.ArmsInterventionsModule", "ArmsInterventionsModule")
                        .WithMany()
                        .HasForeignKey("ArmsInterventionsModuleId");

                    b.HasOne("Model.ConditionsModule", "ConditionsModule")
                        .WithMany()
                        .HasForeignKey("ConditionsModuleId");

                    b.HasOne("Model.ContactsLocationsModule", "ContactsLocationsModule")
                        .WithMany()
                        .HasForeignKey("ContactsLocationsModuleId");

                    b.HasOne("Model.DescriptionModule", "DescriptionModule")
                        .WithMany()
                        .HasForeignKey("DescriptionModuleId");

                    b.HasOne("Model.DesignModule", "DesignModule")
                        .WithMany()
                        .HasForeignKey("DesignModuleId");

                    b.HasOne("Model.EligibilityModule", "EligibilityModule")
                        .WithMany()
                        .HasForeignKey("EligibilityModuleId");

                    b.HasOne("Model.IdentificationModule", "IdentificationModule")
                        .WithMany()
                        .HasForeignKey("IdentificationModuleId");

                    b.HasOne("Model.SponsorCollaboratorsModule", "SponsorCollaboratorsModule")
                        .WithMany()
                        .HasForeignKey("SponsorCollaboratorsModuleId");

                    b.HasOne("Model.StatusModule", "StatusModule")
                        .WithMany()
                        .HasForeignKey("StatusModuleId");
                });

            modelBuilder.Entity("Model.Root", b =>
                {
                    b.HasOne("Model.FullStudy", "FullStudy")
                        .WithMany()
                        .HasForeignKey("FullStudyId");
                });

            modelBuilder.Entity("Model.SecondaryIdInfo", b =>
                {
                    b.HasOne("Model.SecondaryIdInfoList", null)
                        .WithMany("SecondaryIdInfo")
                        .HasForeignKey("SecondaryIdInfoListId");
                });

            modelBuilder.Entity("Model.SponsorCollaboratorsModule", b =>
                {
                    b.HasOne("Model.LeadSponsor", "LeadSponsor")
                        .WithMany()
                        .HasForeignKey("LeadSponsorId");
                });

            modelBuilder.Entity("Model.StatusModule", b =>
                {
                    b.HasOne("Model.ExpandedAccessInfo", "ExpandedAccessInfo")
                        .WithMany()
                        .HasForeignKey("ExpandedAccessInfoId");

                    b.HasOne("Model.LastUpdatePostDateStruct", "LastUpdatePostDateStruct")
                        .WithMany()
                        .HasForeignKey("LastUpdatePostDateStructId");

                    b.HasOne("Model.StudyFirstPostDateStruct", "StudyFirstPostDateStruct")
                        .WithMany()
                        .HasForeignKey("StudyFirstPostDateStructId");
                });

            modelBuilder.Entity("Model.Study", b =>
                {
                    b.HasOne("Model.DerivedSection", "DerivedSection")
                        .WithMany()
                        .HasForeignKey("DerivedSectionId");

                    b.HasOne("Model.ProtocolSection", "ProtocolSection")
                        .WithMany()
                        .HasForeignKey("ProtocolSectionId");
                });
#pragma warning restore 612, 618
        }
    }
}
